__init__,BERT_pytorch.bert_pytorch_my.model.embedding.bert.BERTEmbedding,[[]],"[[17, 256]]",1
__init__,BERT_pytorch.bert_pytorch_my.model.embedding.bert.TokenEmbedding,[[]],"[[17, 256]]",1
__init__,BERT_pytorch.bert_pytorch_my.model.embedding.bert.PositionalEmbedding,[[]],[[256]],1
__init__,BERT_pytorch.bert_pytorch_my.model.embedding.bert.SegmentEmbedding,[[]],[[256]],1
__init__,BERT_pytorch.bert_pytorch_my.model.bert.TransformerBlock,"[[], [], [], [], [], [], [], []]","[[], [], [], [], [], [], [], []]",8
__init__,BERT_pytorch.bert_pytorch_my.model.transformer.MultiHeadedAttention,"[[], [], [], [], [], [], [], []]","[[8, 256], [8, 256], [8, 256], [8, 256], [8, 256], [8, 256], [8, 256], [8, 256]]",8
__init__,BERT_pytorch.bert_pytorch_my.model.transformer.PositionwiseFeedForward,"[[], [], [], [], [], [], [], []]","[[256, 1024, 0.1], [256, 1024, 0.1], [256, 1024, 0.1], [256, 1024, 0.1], [256, 1024, 0.1], [256, 1024, 0.1], [256, 1024, 0.1], [256, 1024, 0.1]]",8
__init__,BERT_pytorch.bert_pytorch_my.model.transformer.SublayerConnection,"[[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]","[[256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1], [256, 0.1]]",16
forward,BERT_pytorch.bert_pytorch_my.model.embedding.bert.BERTEmbedding,"[[{'torch.LongTensor', torch.Size([2, 20])}, {'torch.LongTensor', torch.Size([2, 20])}]]",[[]],1
forward,BERT_pytorch.bert_pytorch_my.model.embedding.bert.TokenEmbedding,"[[{'torch.LongTensor', torch.Size([2, 20])}]]",[[]],1
forward,BERT_pytorch.bert_pytorch_my.model.embedding.bert.PositionalEmbedding,"[[{'torch.LongTensor', torch.Size([2, 20])}]]",[[]],1
forward,BERT_pytorch.bert_pytorch_my.model.embedding.bert.SegmentEmbedding,"[[{'torch.LongTensor', torch.Size([2, 20])}]]",[[]],1
forward,BERT_pytorch.bert_pytorch_my.model.bert.TransformerBlock,"[[{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}]]","[[], [], [], [], [], [], [], []]",8
forward,BERT_pytorch.bert_pytorch_my.model.transformer.SublayerConnection,"[[{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}]]","[[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]",16
forward,BERT_pytorch.bert_pytorch_my.model.transformer.MultiHeadedAttention,"[[{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}, {torch.Size([2, 20, 256]), 'torch.FloatTensor'}]]","[[{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}], [{torch.Size([2, 1, 20, 20]), 'torch.BoolTensor'}]]",8
forward,BERT_pytorch.bert_pytorch_my.model.transformer.PositionwiseFeedForward,"[[{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}], [{torch.Size([2, 20, 256]), 'torch.FloatTensor'}]]","[[], [], [], [], [], [], [], []]",8
