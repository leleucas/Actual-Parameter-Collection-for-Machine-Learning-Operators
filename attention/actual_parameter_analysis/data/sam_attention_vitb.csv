// 执行的是vit_b模型
// encoder中的attention

__init__,dec_func.Attention_image_encoder,"[[768], [768], [768], [768], [768], [768], [768], [768], [768], [768], [768], [768]]","[[12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [64, 64], [64, 64]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [64, 64], [64, 64]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [64, 64], [64, 64]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [14, 14], [14, 14]], [12, True, True, True, [64, 64], [64, 64]]]",12
// 768是dim(16*16*3)
// 后面是qkv_bias: bool = True,
// use_rel_pos: bool = False,
// rel_pos_zero_init: bool = True,
// input_size


forward,dec_func.Attention_image_encoder,"[[{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([1, 64, 64, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([1, 64, 64, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([1, 64, 64, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([25, 14, 14, 768])}], [{'torch.cuda.FloatTensor', torch.Size([1, 64, 64, 768])}]]","[[], [], [], [], [], [], [], [], [], [], [], []]",12
// x, shape是[25, 14, 14, 768]
// q, k, v的shape的计算方式是[x.shape[0] * head_num, x.shape[1] * x.shape[2], x.shape[3] / 3 / head_num]



// decoder中的attention

__init__,dec_func.Attention_transformer,"[[256, 8], [256, 8], [256, 8], [256, 8], [256, 8], [256, 8], [256, 8]]","[[], [2], [2], [], [2], [2], [2]]",7
// embedding_dim: int,
// num_heads: int,
// downsample_rate: int = 1,


forward,dec_func.Attention_transformer,"[[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]","[[{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}], [{'torch.cuda.FloatTensor', torch.Size([64, 7, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}, {'torch.cuda.FloatTensor', torch.Size([64, 4096, 256])}]]",112
// q: Tensor, k: Tensor, v: Tensor